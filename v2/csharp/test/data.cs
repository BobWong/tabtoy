// Generated by github.com/davyxu/tabtoy
// Version: 2.9.1
// DO NOT EDIT!!
using System.Collections.Generic;
using System;

namespace Data
{


    // Defined in table: Globals
    public enum rewardType
    {


        none = 0, // 奖励为空


        item = 140099, // 道具物品


        denar = 140000, // 代币


        gold = 140001, // 金币


        silver = 140002, // 银币


        roleExp = 140003, // 角色经验值


        petExp = 140004, // 宠物经验值


        roleExpBall = 140005, // 角色经验球


        petExpBall = 140006, // 宠物经验球


        expBonus = 140007, // 双倍点数


        vigor = 140008, // 活力


        jobHonor = 140009, // 门派贡献度

    }





    //Defined in table: Globals
    public partial class Vec3
    {


        public float X = 0f;


        public float Y = 0f;


        public float Z = 0f;


        public static Vec3 Deserialize(tabtoy.DataReader reader)
        {
            Vec3 ins = new Vec3();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x50000:
                        {
                            ins.X = reader.ReadFloat();
                        }
                        break;
                    case 0x50001:
                        {
                            ins.Y = reader.ReadFloat();
                        }
                        break;
                    case 0x50002:
                        {
                            ins.Z = reader.ReadFloat();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class vec2map
    {


        public int mapID = 0;


        public float X = 0f;


        public float Y = 0f;


        public float Z = 0f;


        public static vec2map Deserialize(tabtoy.DataReader reader)
        {
            vec2map ins = new vec2map();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x10000:
                        {
                            ins.mapID = reader.ReadInt32();
                        }
                        break;
                    case 0x50001:
                        {
                            ins.X = reader.ReadFloat();
                        }
                        break;
                    case 0x50002:
                        {
                            ins.Y = reader.ReadFloat();
                        }
                        break;
                    case 0x50003:
                        {
                            ins.Z = reader.ReadFloat();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class skill
    {


        public int skillType = 0; // 技能


        public int skillLevel = 0; // 等级


        public static skill Deserialize(tabtoy.DataReader reader)
        {
            skill ins = new skill();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x10000:
                        {
                            ins.skillType = reader.ReadInt32();
                        }
                        break;
                    case 0x10001:
                        {
                            ins.skillLevel = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class costItem
    {


        public int itemID = 0; // 物品


        public int num = 0; // 数量


        public static costItem Deserialize(tabtoy.DataReader reader)
        {
            costItem ins = new costItem();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x10000:
                        {
                            ins.itemID = reader.ReadInt32();
                        }
                        break;
                    case 0x10001:
                        {
                            ins.num = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class attr
    {


        public int vitality = 0; // 体质


        public int magic = 0; // 魔力


        public int strength = 0; // 力量


        public int stamina = 0; // 耐力


        public int agile = 0; // 敏捷


        public static attr Deserialize(tabtoy.DataReader reader)
        {
            attr ins = new attr();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x10000:
                        {
                            ins.vitality = reader.ReadInt32();
                        }
                        break;
                    case 0x10001:
                        {
                            ins.magic = reader.ReadInt32();
                        }
                        break;
                    case 0x10002:
                        {
                            ins.strength = reader.ReadInt32();
                        }
                        break;
                    case 0x10003:
                        {
                            ins.stamina = reader.ReadInt32();
                        }
                        break;
                    case 0x10004:
                        {
                            ins.agile = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class reward
    {


        public string type = ""; // 类型


        public int num = 0; // 数量


        public int odds = 0; // 几率


        public int itemID = 0; // 物品ID


        public static reward Deserialize(tabtoy.DataReader reader)
        {
            reward ins = new reward();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x60000:
                        {
                            ins.type = reader.ReadString();
                        }
                        break;
                    case 0x10001:
                        {
                            ins.num = reader.ReadInt32();
                        }
                        break;
                    case 0x10002:
                        {
                            ins.odds = reader.ReadInt32();
                        }
                        break;
                    case 0x10003:
                        {
                            ins.itemID = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class showEffect
    {

        /// <summary> 
        /// 单位，秒
        /// </summary>
        public float touchOffTime = 0f; // 触发时间


        public string effect = ""; // 特效


        public string mount = ""; // 挂载点

        /// <summary> 
        /// 模型移动速度
        /// </summary>
        public int speed = 0; // 速度


        public int coordinateX = 0; // 屏幕坐标X


        public int coordinateY = 0; // 屏幕坐标Y


        public static showEffect Deserialize(tabtoy.DataReader reader)
        {
            showEffect ins = new showEffect();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x50000:
                        {
                            ins.touchOffTime = reader.ReadFloat();
                        }
                        break;
                    case 0x60001:
                        {
                            ins.effect = reader.ReadString();
                        }
                        break;
                    case 0x60002:
                        {
                            ins.mount = reader.ReadString();
                        }
                        break;
                    case 0x10003:
                        {
                            ins.speed = reader.ReadInt32();
                        }
                        break;
                    case 0x10004:
                        {
                            ins.coordinateX = reader.ReadInt32();
                        }
                        break;
                    case 0x10005:
                        {
                            ins.coordinateY = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class img
    {


        public string route = ""; // 路径


        public string imgName = ""; // 图片名


        public static img Deserialize(tabtoy.DataReader reader)
        {
            img ins = new img();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x60000:
                        {
                            ins.route = reader.ReadString();
                        }
                        break;
                    case 0x60001:
                        {
                            ins.imgName = reader.ReadString();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class partsInfo
    {


        public string weapons = ""; // 武器


        public string weapons2 = ""; // 武器2


        public string backpack = ""; // 背包


        public static partsInfo Deserialize(tabtoy.DataReader reader)
        {
            partsInfo ins = new partsInfo();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x60000:
                        {
                            ins.weapons = reader.ReadString();
                        }
                        break;
                    case 0x60001:
                        {
                            ins.weapons2 = reader.ReadString();
                        }
                        break;
                    case 0x60002:
                        {
                            ins.backpack = reader.ReadString();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class skillCamera
    {


        public string effect = ""; // 特效


        public float x = 0f; // x


        public float y = 0f; // y


        public float z = 0f; // z


        public float time = 0f; // 时间


        public static skillCamera Deserialize(tabtoy.DataReader reader)
        {
            skillCamera ins = new skillCamera();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x60000:
                        {
                            ins.effect = reader.ReadString();
                        }
                        break;
                    case 0x50001:
                        {
                            ins.x = reader.ReadFloat();
                        }
                        break;
                    case 0x50002:
                        {
                            ins.y = reader.ReadFloat();
                        }
                        break;
                    case 0x50003:
                        {
                            ins.z = reader.ReadFloat();
                        }
                        break;
                    case 0x50004:
                        {
                            ins.time = reader.ReadFloat();
                        }
                        break;
                }
            }
            return ins;
        }
    }


    //Defined in table: Globals
    public partial class levRange
    {


        public int min = 0; // 最小等级


        public int max = 0; // 最大等级


        public static levRange Deserialize(tabtoy.DataReader reader)
        {
            levRange ins = new levRange();
            int len = reader.ReadInt32();
            while (len > 0)
            {
                int tag = reader.ReadInt32();
                len--;
                switch (tag)
                {
                    case 0x10000:
                        {
                            ins.min = reader.ReadInt32();
                        }
                        break;
                    case 0x10001:
                        {
                            ins.max = reader.ReadInt32();
                        }
                        break;
                }
            }
            return ins;
        }
    }


}
